@* @page *@
@* @model EnergySystem.Web.Price.PriceTrackerModel *@
@{
ViewData["Title"] = "Real-Time Price Tracker";
}

<div class="container mt-5">
    <h1 class="text-primary text-center mb-4">Real-Time Price Tracker</h1>

    <!-- Price Chart -->
    <div class="card shadow-lg mb-4">
        <div class="card-header bg-primary text-white">
            <h2 class="mb-0">Electricity Price Chart</h2>
        </div>
        <div class="card-body">
            <canvas id="priceChart" width="800" height="400"></canvas>
        </div>
    </div>

    <!-- Recommendations -->
    <div class="card shadow-lg mb-4">
        <div class="card-header bg-success text-white">
            <h2 class="mb-0">Recommendations</h2>
        </div>
        <div class="card-body">
            <p class="text-muted">Based on current electricity prices, here are your recommendations:</p>
            <ul>
                <li>
                    @* @if (Model.ShouldCharge) *@
                    @* { *@
                    <span class="text-success font-weight-bold">Charge your battery now!</span>
                    @* } *@
                    @* else *@
                    @* { *@
                    <span class="text-danger font-weight-bold">/ Avoid charging; use battery power instead.</span>
                    @* } *@
                </li>
            </ul>
        </div>
    </div>
</div>

@section Scripts {
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const ctx = document.getElementById('priceChart').getContext('2d');
    const priceData = @Html.Raw(Json.Serialize( new List<double>
                      {
                          0.2, 0.19, 0.18, 0.17, 0.16, 0.15, 0.14, 0.13, 0.12,
                          0.25, 0.26, 0.27, 0.28, 0.29, 0.3, 0.31, 0.32, 0.33,
                          0.34, 0.35, 0.24, 0.23, 0.22, 0.21
                      })); //(Model.PriceData));
    const timeLabels = @Html.Raw(Json.Serialize(new List<string>
                       {
                           "00:00", "01:00", "02:00", "03:00", "04:00", "05:00", "06:00",
                           "07:00", "08:00", "09:00", "10:00", "11:00", "12:00", "13:00",
                           "14:00", "15:00", "16:00", "17:00", "18:00", "19:00", "20:00",
                           "21:00", "22:00", "23:00"
                       })); //(Model.TimeLabels));

    const chart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: timeLabels,
            datasets: [{
                label: 'Electricity Price (BGN/kWh)',
                data: priceData,
                borderColor: 'rgba(75, 192, 192, 1)',
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                fill: true,
                tension: 0.4
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    display: true,
                    position: 'top'
                }
            },
            scales: {
                y: {
                    beginAtZero: true,
                    title: {
                        display: true,
                        text: 'Price (BGN/kWh)'
                    }
                },
                x: {
                    title: {
                        display: true,
                        text: 'Hour of the Day'
                    }
                }
            }
        }
    });
</script>
}
